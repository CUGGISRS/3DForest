# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
pool:
  vmImage: 'ubuntu-latest'
steps:
- script: 
    echo intalation of dependencies
    sudo apt-get update 
    
    sudo apt-get install -y --fix-missing qt5-default libqt5x11extras5-dev qtbase5-dev qttools5-dev libeigen3-dev libeigen3-doc cmake libflann-dev liblas-dev liblas-bin liblas3
    
    sudo apt-get install -y --fix-missing libboost-all-dev
    
    mkdir deps && cd deps
    
    mkdir vtk && mkdir vtk_build
    
    wget "https://www.vtk.org/files/release/8.2/VTK-8.2.0.zip" -O vtk.zip
    
    unzip vtk.zip -d vtk
    
    cd vtk_build
    
    cmake -S../vtk/VTK-8.2.0 -DVTK_QT_VERSION=5 -DVTK_Group_Qt=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local 
    
    make -j$(($(nproc) - 1))
    
    echo make za nami
    
    make install
    
    
    mkdir pcl && mkdir pcl_build
    
    wget "https://codeload.github.com/janekT/pcl/zip/pointpicking" -O pcl.zip
    
    unzip pcl.zip -d pcl
    
    cd pcl_build
    
    echo CMAKE
    
    cmake -S../pcl/pcl-pointpicking -DEIGEN_INCLUDE_DIR="/usr/include/eigen3/Eigen" -DFLANN_INCLUDE_DIR="/usr/include/flann" -DFLANN_LIBRARY="/usr/lib/x86_64-linux-gnu/libflann_cpp.so" -DVTK_DIR="/usr/bin/vtk7"
    
    make 
    
    sudo make install
  
  
  # Go to the Root directory  
 # - cd ..
  #- cd ..

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
